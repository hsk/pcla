= Constants =
iff=(bool*[]->bool*[]->bool*[])
or=(bool*[]->bool*[]->bool*[])
and=(bool*[]->bool*[]->bool*[])
not=(bool*[]->bool*[])
false=bool*[]
ex=((a->bool*[])->bool*[])
all=((a->bool*[])->bool*[])
true=bool*[]
eqt=(a->a->bool*[])
imp=(bool*[]->bool*[]->bool*[])
eq=(a->a->prop)
= Proved Theorems =
eqssubst=eq*[*eqt$[*t,*s],*true]==> ?P*[*s]==> ?P*[*t]
eqsym=eq*[*eqt$[*s,*t],*true]==>eq*[*eqt$[*t,*s],*true]
True_or_False=eq*[*or$[*eqt$[*P,*true],*eqt$[*P,*false]],*true]
iff=eq*[*imp$[*imp$[*P,*Q],*imp$[*imp$[*Q,*P],*eqt$[*P,*Q]]],*true]
mp=eq*[*imp$[*P,*Q],*true]==>eq*[*P,*true]==>eq*[*Q,*true]
impI=(eq*[*eqt$[*P,*true],*true]==>eq*[*eqt$[*Q,*true],*true])==>eq*[*imp$[*P,*Q],*true]
eqext=forall(x,eq*[*eqt$[*f$[*x],*g$[*x]],*true])==>eq*[*eqt$[(fun[x]-> *f$[*x]),(fun[x]-> *g$[*x])],*true]
eqsubst=eq*[*eqt$[*s,*t],*true]==> ?P*[*s]==> ?P*[*t]
eqrefl=eq*[*eqt$[*t,*t],*true]
iff_def=eq*[*iff$[*P,*Q],*eqt$[*P,*Q]]
or_def=eq*[*or$[*P,*Q],*all$[(fun[R]-> *imp$[*imp$[*P,*R],*imp$[*imp$[*Q,*R],*R]])]]
and_def=eq*[*and$[*P,*Q],*all$[(fun[R]-> *imp$[*imp$[*P,*imp$[*Q,*R]],*R])]]
not_def=eq*[*not$[*P],*imp$[*P,*false]]
false_def=eq*[*false,*all$[(fun[P]-> *P)]]
ex_def=eq*[*ex$[*P],*all$[(fun[Q]-> *imp$[*all$[(fun[x]-> *imp$[*P$[*x],*Q])],*Q])]]
all_def=eq*[*all$[*P],*eqt$[*P,(fun[x]-> *true)]]
true_def=eq*[*true,*eqt$[(fun[x]-> *x),(fun[x]-> *x)]]
Uncurry=(and(?P*[],?Q*[])==> ?R*[])==> ?P*[]==> ?Q*[]==> ?R*[]
Curry=(?P*[]==> ?Q*[]==> ?R*[])==>and(?P*[],?Q*[])==> ?R*[]
trans=eq*[*r,*s]==>eq*[*s,*t]==>eq*[*r,*t]
sym=eq*[*r,*s]==>eq*[*s,*r]
subst=eq*[*a,*b]==> ?P*[*a]==> ?P*[*b]
refl=eq*[*r,*r]
