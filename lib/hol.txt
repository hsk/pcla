= Constants =
iff=(conT(bool,[])->conT(bool,[])->conT(bool,[]))
or=(conT(bool,[])->conT(bool,[])->conT(bool,[]))
and=(conT(bool,[])->conT(bool,[])->conT(bool,[]))
not=(conT(bool,[])->conT(bool,[]))
false=conT(bool,[])
ex=((varT(a)->conT(bool,[]))->conT(bool,[]))
all=((varT(a)->conT(bool,[]))->conT(bool,[]))
true=conT(bool,[])
eqt=(varT(a)->varT(a)->conT(bool,[]))
imp=(conT(bool,[])->conT(bool,[])->conT(bool,[]))
eq=(varT(a)->varT(a)->prop)
= Proved Theorems =
eqssubst=pred(eq,[!eqt$[!t,!s],!true])==>pred(?P,[!s])==>pred(?P,[!t])
eqsym=pred(eq,[!eqt$[!s,!t],!true])==>pred(eq,[!eqt$[!t,!s],!true])
True_or_False=pred(eq,[!or$[!eqt$[!P,!true],!eqt$[!P,!false]],!true])
iff=pred(eq,[!imp$[!imp$[!P,!Q],!imp$[!imp$[!Q,!P],!eqt$[!P,!Q]]],!true])
mp=pred(eq,[!imp$[!P,!Q],!true])==>pred(eq,[!P,!true])==>pred(eq,[!Q,!true])
impI=(pred(eq,[!eqt$[!P,!true],!true])==>pred(eq,[!eqt$[!Q,!true],!true]))==>pred(eq,[!imp$[!P,!Q],!true])
eqext=forall(x,pred(eq,[!eqt$[!f$[!x],!g$[!x]],!true]))==>pred(eq,[!eqt$[abs([x],!f$[!x]),abs([x],!g$[!x])],!true])
eqsubst=pred(eq,[!eqt$[!s,!t],!true])==>pred(?P,[!s])==>pred(?P,[!t])
eqrefl=pred(eq,[!eqt$[!t,!t],!true])
iff_def=pred(eq,[!iff$[!P,!Q],!eqt$[!P,!Q]])
or_def=pred(eq,[!or$[!P,!Q],!all$[abs([R],!imp$[!imp$[!P,!R],!imp$[!imp$[!Q,!R],!R]])]])
and_def=pred(eq,[!and$[!P,!Q],!all$[abs([R],!imp$[!imp$[!P,!imp$[!Q,!R]],!R])]])
not_def=pred(eq,[!not$[!P],!imp$[!P,!false]])
false_def=pred(eq,[!false,!all$[abs([P],!P)]])
ex_def=pred(eq,[!ex$[!P],!all$[abs([Q],!imp$[!all$[abs([x],!imp$[!P$[!x],!Q])],!Q])]])
all_def=pred(eq,[!all$[!P],!eqt$[!P,abs([x],!true)]])
true_def=pred(eq,[!true,!eqt$[abs([x],!x),abs([x],!x)]])
Uncurry=(and(pred(?P,[]),pred(?Q,[]))==>pred(?R,[]))==>pred(?P,[])==>pred(?Q,[])==>pred(?R,[])
Curry=(pred(?P,[])==>pred(?Q,[])==>pred(?R,[]))==>and(pred(?P,[]),pred(?Q,[]))==>pred(?R,[])
trans=pred(eq,[!r,!s])==>pred(eq,[!s,!t])==>pred(eq,[!r,!t])
sym=pred(eq,[!r,!s])==>pred(eq,[!s,!r])
subst=pred(eq,[!a,!b])==>pred(?P,[!a])==>pred(?P,[!b])
refl=pred(eq,[!r,!r])
