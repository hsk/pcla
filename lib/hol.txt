= Constants =
iff=(conT(bool,[])->conT(bool,[])->conT(bool,[]))
or=(conT(bool,[])->conT(bool,[])->conT(bool,[]))
and=(conT(bool,[])->conT(bool,[])->conT(bool,[]))
not=(conT(bool,[])->conT(bool,[]))
false=conT(bool,[])
ex=((varT(a)->conT(bool,[]))->conT(bool,[]))
all=((varT(a)->conT(bool,[]))->conT(bool,[]))
true=conT(bool,[])
eqt=(varT(a)->varT(a)->conT(bool,[]))
imp=(conT(bool,[])->conT(bool,[])->conT(bool,[]))
eq=(varT(a)->varT(a)->prop)
= Proved Theorems =
eqssubst=pred(eq,[app(var(eqt),[var(t),var(s)]),var(true)])==>pred(?P,[var(s)])==>pred(?P,[var(t)])
eqsym=pred(eq,[app(var(eqt),[var(s),var(t)]),var(true)])==>pred(eq,[app(var(eqt),[var(t),var(s)]),var(true)])
True_or_False=pred(eq,[app(var(or),[app(var(eqt),[var(P),var(true)]),app(var(eqt),[var(P),var(false)])]),var(true)])
iff=pred(eq,[app(var(imp),[app(var(imp),[var(P),var(Q)]),app(var(imp),[app(var(imp),[var(Q),var(P)]),app(var(eqt),[var(P),var(Q)])])]),var(true)])
mp=pred(eq,[app(var(imp),[var(P),var(Q)]),var(true)])==>pred(eq,[var(P),var(true)])==>pred(eq,[var(Q),var(true)])
impI=(pred(eq,[app(var(eqt),[var(P),var(true)]),var(true)])==>pred(eq,[app(var(eqt),[var(Q),var(true)]),var(true)]))==>pred(eq,[app(var(imp),[var(P),var(Q)]),var(true)])
eqext=forall(x,pred(eq,[app(var(eqt),[app(var(f),[var(x)]),app(var(g),[var(x)])]),var(true)]))==>pred(eq,[app(var(eqt),[abs([x],app(var(f),[var(x)])),abs([x],app(var(g),[var(x)]))]),var(true)])
eqsubst=pred(eq,[app(var(eqt),[var(s),var(t)]),var(true)])==>pred(?P,[var(s)])==>pred(?P,[var(t)])
eqrefl=pred(eq,[app(var(eqt),[var(t),var(t)]),var(true)])
iff_def=pred(eq,[app(var(iff),[var(P),var(Q)]),app(var(eqt),[var(P),var(Q)])])
or_def=pred(eq,[app(var(or),[var(P),var(Q)]),app(var(all),[abs([R],app(var(imp),[app(var(imp),[var(P),var(R)]),app(var(imp),[app(var(imp),[var(Q),var(R)]),var(R)])]))])])
and_def=pred(eq,[app(var(and),[var(P),var(Q)]),app(var(all),[abs([R],app(var(imp),[app(var(imp),[var(P),app(var(imp),[var(Q),var(R)])]),var(R)]))])])
not_def=pred(eq,[app(var(not),[var(P)]),app(var(imp),[var(P),var(false)])])
false_def=pred(eq,[var(false),app(var(all),[abs([P],var(P))])])
ex_def=pred(eq,[app(var(ex),[var(P)]),app(var(all),[abs([Q],app(var(imp),[app(var(all),[abs([x],app(var(imp),[app(var(P),[var(x)]),var(Q)]))]),var(Q)]))])])
all_def=pred(eq,[app(var(all),[var(P)]),app(var(eqt),[var(P),abs([x],var(true))])])
true_def=pred(eq,[var(true),app(var(eqt),[abs([x],var(x)),abs([x],var(x))])])
Uncurry=(and(pred(?P,[]),pred(?Q,[]))==>pred(?R,[]))==>pred(?P,[])==>pred(?Q,[])==>pred(?R,[])
Curry=(pred(?P,[])==>pred(?Q,[])==>pred(?R,[]))==>and(pred(?P,[]),pred(?Q,[]))==>pred(?R,[])
trans=pred(eq,[var(r),var(s)])==>pred(eq,[var(s),var(t)])==>pred(eq,[var(r),var(t)])
sym=pred(eq,[var(r),var(s)])==>pred(eq,[var(s),var(r)])
subst=pred(eq,[var(a),var(b)])==>pred(?P,[var(a)])==>pred(?P,[var(b)])
refl=pred(eq,[var(r),var(r)])
